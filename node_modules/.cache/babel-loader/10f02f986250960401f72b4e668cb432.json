{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { ElMessage } from \"element-plus\";\nimport { getRobotInfoApi, robotNavigationApi, getNavigationResultApi, ctrlArmApi, deleteErrors, armBackOrigin, armEndOrigin, startArmZeroForce } from \"@/service/robot\";\nimport { codeMessage } from \"@/utils/request\";\nexport default {\n  name: \"RobotOperation\",\n  props: {\n    positionsList: Array,\n    drawPoint: Function,\n    calculatePointPosition: Function,\n    initRobotInfo: Object\n  },\n\n  data() {\n    return {\n      dialogVisible: false,\n      timer: null,\n      //机械臂是否已上电\n      disabledarmPowerOn: false,\n      // 机械臂是否已使能\n      disablearmEnabled: false,\n      codeMessage: codeMessage,\n      robotInfo: {},\n      currentNavRequestId: \"\",\n      navResult: null,\n      polling: null,\n      navCmdMap: {\n        1: \"开始\",\n        2: \"暂停\",\n        3: \"继续\",\n        4: \"结束\"\n      },\n      validParam: {\n        0: \"powerOn\",\n        1: \"enable\",\n        2: \"stop\",\n        3: \"clearFaults\"\n      }\n    };\n  },\n\n  methods: {\n    endLoading(loading) {\n      loading.close();\n    },\n\n    startLoading() {\n      const loading = this.$loading({\n        lock: true,\n        text: \"上电中...\",\n        background: \"rgba(0,0,0,0.7)\"\n      });\n      return loading;\n    },\n\n    async startArmZeroForce(flag) {\n      const res = await startArmZeroForce({\n        param: flag\n      });\n\n      if (res.code === 0) {\n        ElMessage({\n          message: `操作成功`,\n          type: \"success\"\n        });\n      }\n    },\n\n    async onArmBackOriginEnd() {\n      // console.log('end')\n      const res = await armEndOrigin({\n        cmd: 3\n      });\n    },\n\n    async onArmBackOrigin() {\n      // console.log(111)\n      const res = await armBackOrigin();\n\n      if (res.code === 0) {\n        ElMessage({\n          message: `操作成功`,\n          type: \"success\"\n        });\n      }\n    },\n\n    async onDeleteErrors() {\n      const res = await deleteErrors();\n\n      if (res.code === 0) {\n        ElMessage({\n          message: `操作成功`,\n          type: \"success\"\n        });\n      }\n    },\n\n    async getRobotInfo() {\n      const {\n        data\n      } = await getRobotInfoApi();\n      this.robotInfo = data; // const { x, y } = this.calculatePointPosition(data.x, data.y);\n      // // 渲染机器人位置\n      // this.drawPoint(x, y, 20);\n\n      return data;\n    },\n\n    mySetInterval() {\n      this.getRobotInfo();\n      this.timer = setTimeout(() => this.mySetInterval(), 1000);\n    },\n\n    async changeRobotPosition({\n      destPosition,\n      cmd\n    }) {\n      this.navResult = null;\n      const res = await robotNavigationApi({\n        destPosition,\n        cmd\n      });\n      const {\n        data,\n        code\n      } = res;\n      this.currentNavRequestId = data.requestId;\n\n      if (code === 0) {\n        ElMessage({\n          message: `设置导航点成功，当前目标点：${this.positionsList.find(i => i.id === destPosition).type}`,\n          type: \"success\"\n        });\n        this.startPolling();\n      }\n    },\n\n    async getNavResultAndPosition() {\n      // 轮询状态接口 如果接收到数据则说明导航结束了，停止轮询\n      this.getRobotInfo();\n      const res = await getNavigationResultApi();\n\n      if (res.requestId === this.currentNavRequestId) {\n        // 请求id校验\n        this.navResult = res;\n      }\n    },\n\n    async controlArm(validParam, action, status, flag) {\n      await ctrlArmApi({\n        validParam,\n        [action]: status,\n        armIndex: 0\n      });\n\n      if (flag == \"flag\") {\n        // this.startLoading()\n        this.dialogVisible = true;\n      } //TODO 这里应该查询/轮询机器人状态？\n\n    },\n\n    startPolling() {\n      this.polling = setInterval(() => {\n        this.getNavResultAndPosition();\n      }, 1000); //1秒查询一次\n    }\n\n  },\n\n  beforeUnmount() {\n    clearTimeout(this.timer);\n    this.timer = null;\n  },\n\n  mounted() {\n    // 机器人初始信息通过父组件传过来 避免第一次加载地图可能点渲染不上\n    clearTimeout(this.timer);\n    this.timer = null;\n    this.mySetInterval();\n  },\n\n  watch: {\n    navResult(newVal, oldVal) {\n      // 轮询状态 如果接收到数据则说明导航结束了，停止轮询\n      if (newVal) {\n        ElMessage({\n          message: `导航已经结束，当前状态：${codeMessage[newVal.errCode]}`,\n          type: \"success\"\n        });\n        clearTimeout(this.polling);\n        this.polling = null;\n      }\n    },\n\n    robotInfo(newVal, oldVal) {\n      // console.log(\"new\",newVal)\n      this.robotInfo = newVal;\n\n      if (newVal.armPowerOn && !oldVal.armPowerOn) {\n        this.dialogVisible = false; // this.endLoading(this.startLoading())\n        // this.startLoading().close()\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["ElMessage","getRobotInfoApi","robotNavigationApi","getNavigationResultApi","ctrlArmApi","deleteErrors","armBackOrigin","armEndOrigin","startArmZeroForce","codeMessage","name","props","positionsList","Array","drawPoint","Function","calculatePointPosition","initRobotInfo","Object","data","dialogVisible","timer","disabledarmPowerOn","disablearmEnabled","robotInfo","currentNavRequestId","navResult","polling","navCmdMap","validParam","methods","endLoading","loading","close","startLoading","$loading","lock","text","background","flag","res","param","code","message","type","onArmBackOriginEnd","cmd","onArmBackOrigin","onDeleteErrors","getRobotInfo","mySetInterval","setTimeout","changeRobotPosition","destPosition","requestId","find","i","id","startPolling","getNavResultAndPosition","controlArm","action","status","armIndex","setInterval","beforeUnmount","clearTimeout","mounted","watch","newVal","oldVal","errCode","armPowerOn"],"sourceRoot":"","sources":["D:\\Program Files\\web\\prj\\sendRobot\\src\\pages\\Dashboard\\components\\RobotOperation.vue"],"sourcesContent":["<template>\n  <!-- <div>\n    导航区域\n    <div v-for=\"i in positionsList\" :key=\"i.id\">\n      <el-button\n        type=\"primary\"\n        style=\"margin-top: 5px\"\n        @click=\"changeRobotPosition({ destPosition: i.id, cmd: 1 })\"\n        >{{ i.type }}</el-button\n      >\n    </div>\n  </div>\n  <div style=\"margin-top: 10px\">\n    <div>机器人当前状态</div>\n    {{ robotInfo.robotId ? robotInfo : initRobotInfo }}\n  </div>\n  <div v-if=\"polling\" style=\"margin-top: 10px\">\n    <el-button>暂停导航</el-button><el-button>结束导航</el-button>\n  </div>\n  <div v-if=\"navResult\" style=\"margin-top: 10px\">\n    <div>导航已结束，当前状态:{{ codeMessage[navResult.errCode] }}</div>\n  </div> -->\n  <div style=\"margin-top: 10px\">\n    <!-- <div>机械臂控制</div> -->\n    <div class=\"box\">\n      <el-button\n        @click=\"controlArm(0, 'powerOn', true, 'flag')\"\n        class=\"task-button\"\n        :disabled=\"robotInfo.armPowerOn\"\n      >\n        上电\n      </el-button>\n      <el-button\n        @click=\"controlArm(0, 'powerOn', false)\"\n        class=\"task-button\"\n        :disabled=\"!robotInfo.armPowerOn\"\n      >\n        断电\n      </el-button>\n      <el-button\n        @click=\"controlArm(1, 'enable', true)\"\n        class=\"task-button\"\n        :disabled=\"robotInfo.armEnabled || !robotInfo.armPowerOn\"\n      >\n        使能机械臂\n      </el-button>\n      <el-button\n        @click=\"controlArm(1, 'enable', false)\"\n        class=\"task-button\"\n        :disabled=\"!robotInfo.armEnabled\"\n      >\n        去使能机械臂\n      </el-button>\n    </div>\n    <div class=\"box\">\n      <div @click=\"onDeleteErrors\" class=\"task-button\">清错</div>\n      <div\n        @touchstart=\"onArmBackOrigin\"\n        @touchend=\"onArmBackOriginEnd\"\n        class=\"task-button\"\n      >\n        机械臂长按回原点\n      </div>\n      <div class=\"task-button\" @click=\"startArmZeroForce(true)\">\n        开启零力示教\n      </div>\n      <div class=\"task-button\" @click=\"startArmZeroForce(false)\">\n        关闭零力示教\n      </div>\n    </div>\n    <el-dialog v-model=\"dialogVisible\" title=\"Tips\" width=\"30%\">\n      <span>上电中...</span>\n    </el-dialog>\n    <!-- <el-button @click=\"controlArm(1, 'enable', true)\">使能机械臂</el-button>\n    <el-button @click=\"controlArm(1, 'enable', false)\">去使能机械臂</el-button>\n    <el-button @click=\"controlArm(0, 'powerOn', true)\">上电</el-button>\n    <el-button @click=\"controlArm(0, 'powerOn', false)\">断电</el-button>\n    <el-button @click=\"controlArm(2, 'stop', true)\"\n      >停止机械臂当前动作</el-button\n    > -->\n  </div>\n  <div class=\"meal-box\">\n    <div class=\"one\">当前层：5层</div>\n    <div class=\"two\">\n      <span>餐盒升降</span>\n      <el-select\n        v-model=\"meal\"\n        placeholder=\"Select\"\n        size=\"large\"\n        style=\"margin-left: 10px;margin-right: 10px\"\n      >\n        <el-option>选项</el-option>\n      </el-select>\n      <el-button size=\"large\">餐盒升降</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable no-unused-vars */\nimport { ElMessage } from \"element-plus\";\nimport {\n  getRobotInfoApi,\n  robotNavigationApi,\n  getNavigationResultApi,\n  ctrlArmApi,\n  deleteErrors,\n  armBackOrigin,\n  armEndOrigin,\n  startArmZeroForce,\n} from \"@/service/robot\";\nimport { codeMessage } from \"@/utils/request\";\nexport default {\n  name: \"RobotOperation\",\n  props: {\n    positionsList: Array,\n    drawPoint: Function,\n    calculatePointPosition: Function,\n    initRobotInfo: Object,\n  },\n  data() {\n    return {\n      dialogVisible: false,\n      timer: null,\n      //机械臂是否已上电\n      disabledarmPowerOn: false,\n      // 机械臂是否已使能\n      disablearmEnabled: false,\n      codeMessage: codeMessage,\n      robotInfo: {},\n      currentNavRequestId: \"\",\n      navResult: null,\n      polling: null,\n      navCmdMap: {\n        1: \"开始\",\n        2: \"暂停\",\n        3: \"继续\",\n        4: \"结束\",\n      },\n      validParam: {\n        0: \"powerOn\",\n        1: \"enable\",\n        2: \"stop\",\n        3: \"clearFaults\",\n      },\n    };\n  },\n  methods: {\n    endLoading(loading) {\n      loading.close();\n    },\n    startLoading() {\n      const loading = this.$loading({\n        lock: true,\n        text: \"上电中...\",\n        background: \"rgba(0,0,0,0.7)\",\n      });\n      return loading;\n    },\n    async startArmZeroForce(flag) {\n      const res = await startArmZeroForce({ param: flag });\n      if (res.code === 0) {\n        ElMessage({\n          message: `操作成功`,\n          type: \"success\",\n        });\n      }\n    },\n    async onArmBackOriginEnd() {\n      // console.log('end')\n      const res = await armEndOrigin({ cmd: 3 });\n    },\n    async onArmBackOrigin() {\n      // console.log(111)\n      const res = await armBackOrigin();\n      if (res.code === 0) {\n        ElMessage({\n          message: `操作成功`,\n          type: \"success\",\n        });\n      }\n    },\n    async onDeleteErrors() {\n      const res = await deleteErrors();\n      if (res.code === 0) {\n        ElMessage({\n          message: `操作成功`,\n          type: \"success\",\n        });\n      }\n    },\n    async getRobotInfo() {\n      const { data } = await getRobotInfoApi();\n      this.robotInfo = data;\n      // const { x, y } = this.calculatePointPosition(data.x, data.y);\n      // // 渲染机器人位置\n      // this.drawPoint(x, y, 20);\n      return data;\n    },\n    mySetInterval() {\n      this.getRobotInfo();\n      this.timer = setTimeout(() => this.mySetInterval(), 1000);\n    },\n    async changeRobotPosition({ destPosition, cmd }) {\n      this.navResult = null;\n      const res = await robotNavigationApi({ destPosition, cmd });\n      const { data, code } = res;\n      this.currentNavRequestId = data.requestId;\n      if (code === 0) {\n        ElMessage({\n          message: `设置导航点成功，当前目标点：${\n            this.positionsList.find((i) => i.id === destPosition).type\n          }`,\n          type: \"success\",\n        });\n        this.startPolling();\n      }\n    },\n    async getNavResultAndPosition() {\n      // 轮询状态接口 如果接收到数据则说明导航结束了，停止轮询\n      this.getRobotInfo();\n      const res = await getNavigationResultApi();\n      if (res.requestId === this.currentNavRequestId) {\n        // 请求id校验\n        this.navResult = res;\n      }\n    },\n    async controlArm(validParam, action, status, flag) {\n      await ctrlArmApi({ validParam, [action]: status, armIndex: 0 });\n      if (flag == \"flag\") {\n        // this.startLoading()\n        this.dialogVisible = true;\n      }\n      //TODO 这里应该查询/轮询机器人状态？\n    },\n    startPolling() {\n      this.polling = setInterval(() => {\n        this.getNavResultAndPosition();\n      }, 1000); //1秒查询一次\n    },\n  },\n  beforeUnmount() {\n    clearTimeout(this.timer);\n    this.timer = null;\n  },\n  mounted() {\n    // 机器人初始信息通过父组件传过来 避免第一次加载地图可能点渲染不上\n    clearTimeout(this.timer);\n    this.timer = null;\n    this.mySetInterval();\n  },\n  watch: {\n    navResult(newVal, oldVal) {\n      // 轮询状态 如果接收到数据则说明导航结束了，停止轮询\n      if (newVal) {\n        ElMessage({\n          message: `导航已经结束，当前状态：${codeMessage[newVal.errCode]}`,\n          type: \"success\",\n        });\n        clearTimeout(this.polling);\n        this.polling = null;\n      }\n    },\n    robotInfo(newVal, oldVal) {\n      // console.log(\"new\",newVal)\n      this.robotInfo = newVal;\n      if (newVal.armPowerOn && !oldVal.armPowerOn) {\n        this.dialogVisible = false;\n        // this.endLoading(this.startLoading())\n        // this.startLoading().close()\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang='scss'>\n.box {\n  width: 100%;\n  display: flex;\n  margin: 0 auto;\n  .task-button {\n    width: 261px;\n    height: 147px;\n    background: linear-gradient(180deg, #f2f8ff 0%, #ffffff 112.66%);\n    box-shadow: 0px 0px 5px rgba(184, 190, 217, 0.5);\n    border-radius: 20.0355px;\n    border: 2px solid #9abdf8;\n    margin-left: 40px;\n    margin-top: 50px;\n    text-align: center;\n    line-height: 147px;\n    font-size: 20px;\n  }\n}\n.meal-box {\n  width:95%;\n  height: 236px;\n  background: #ffffff;\n  border: 1px solid #b8bed9;\n  box-sizing: border-box;\n  border-radius: 16px;\n  margin: 0 auto;\n  margin-top: 40px;\n  font-size: 20px;\n  .one {\n    margin:20px 0 0 20px\n  }\n  .two {\n    // line-height: 200px;\n    text-align: center;\n    margin-top: 50px;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}