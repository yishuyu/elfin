{"ast":null,"code":"import { defineComponent, ref, computed, inject, resolveComponent, openBlock, createBlock, Transition, withCtx, createElementBlock, normalizeClass, createElementVNode, createVNode, toDisplayString, createCommentVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../constants/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport '../../../../utils/index.mjs';\nimport TimeSpinner from './basic-time-spinner.mjs';\nimport { useOldValue, getAvailableArrs } from './useTimePicker.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { isUndefined } from '../../../../utils/types.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nconst _sfc_main = defineComponent({\n  components: {\n    TimeSpinner\n  },\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      default: void 0\n    },\n    datetimeRole: {\n      type: String\n    },\n    parsedValue: {\n      type: [Object, String]\n    },\n    format: {\n      type: String,\n      default: \"\"\n    }\n  },\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n\n  setup(props, ctx) {\n    const ns = useNamespace(\"time\");\n    const {\n      t,\n      lang\n    } = useLocale();\n    const selectionRange = ref([0, 2]);\n    const oldValue = useOldValue(props);\n    const transitionName = computed(() => {\n      return isUndefined(props.actualVisible) ? `${ns.namespace.value}-zoom-in-top` : \"\";\n    });\n    const showSeconds = computed(() => {\n      return props.format.includes(\"ss\");\n    });\n    const amPmMode = computed(() => {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n\n    const isValidValue = _date => {\n      const parsedDate = dayjs(_date).locale(lang.value);\n      const result = getRangeAvailableTime(parsedDate);\n      return parsedDate.isSame(result);\n    };\n\n    const handleCancel = () => {\n      ctx.emit(\"pick\", oldValue.value, false);\n    };\n\n    const handleConfirm = (visible = false, first = false) => {\n      if (first) return;\n      ctx.emit(\"pick\", props.parsedValue, visible);\n    };\n\n    const handleChange = _date => {\n      if (!props.visible) {\n        return;\n      }\n\n      const result = getRangeAvailableTime(_date).millisecond(0);\n      ctx.emit(\"pick\", result, true);\n    };\n\n    const setSelectionRange = (start, end) => {\n      ctx.emit(\"select-range\", start, end);\n      selectionRange.value = [start, end];\n    };\n\n    const changeSelectionRange = step => {\n      const list = [0, 3].concat(showSeconds.value ? [6] : []);\n      const mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      const index = list.indexOf(selectionRange.value[0]);\n      const next = (index + step + list.length) % list.length;\n      timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n    };\n\n    const handleKeydown = event => {\n      const code = event.code;\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1;\n        timePickerOptions[\"start_scrollDown\"](step);\n        event.preventDefault();\n        return;\n      }\n    };\n\n    const getRangeAvailableTime = date => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds\n      };\n      let result = date;\n      [\"hour\", \"minute\", \"second\"].forEach(_ => {\n        if (availableMap[_]) {\n          let availableArr;\n          const method = availableMap[_];\n\n          if (_ === \"minute\") {\n            availableArr = method(result.hour(), props.datetimeRole);\n          } else if (_ === \"second\") {\n            availableArr = method(result.hour(), result.minute(), props.datetimeRole);\n          } else {\n            availableArr = method(props.datetimeRole);\n          }\n\n          if (availableArr && availableArr.length && !availableArr.includes(result[_]())) {\n            result = result[_](availableArr[0]);\n          }\n        }\n      });\n      return result;\n    };\n\n    const parseUserInput = value => {\n      if (!value) return null;\n      return dayjs(value, props.format).locale(lang.value);\n    };\n\n    const formatToString = value => {\n      if (!value) return null;\n      return value.format(props.format);\n    };\n\n    const getDefaultValue = () => {\n      return dayjs(defaultValue).locale(lang.value);\n    };\n\n    ctx.emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    ctx.emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    ctx.emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    ctx.emit(\"set-picker-option\", [\"handleKeydown\", handleKeydown]);\n    ctx.emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    ctx.emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    const timePickerOptions = {};\n\n    const onSetOption = e => {\n      timePickerOptions[e[0]] = e[1];\n    };\n\n    const pickerBase = inject(\"EP_PICKER_BASE\");\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue\n    } = pickerBase.props;\n    const {\n      getAvailableHours,\n      getAvailableMinutes,\n      getAvailableSeconds\n    } = getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds);\n    return {\n      ns,\n      transitionName,\n      arrowControl,\n      onSetOption,\n      t,\n      handleConfirm,\n      handleChange,\n      setSelectionRange,\n      amPmMode,\n      showSeconds,\n      handleCancel,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_time_spinner = resolveComponent(\"time-spinner\");\n\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.transitionName\n  }, {\n    default: withCtx(() => [_ctx.actualVisible || _ctx.visible ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      class: normalizeClass(_ctx.ns.b(\"panel\"))\n    }, [createElementVNode(\"div\", {\n      class: normalizeClass([_ctx.ns.be(\"panel\", \"content\"), {\n        \"has-seconds\": _ctx.showSeconds\n      }])\n    }, [createVNode(_component_time_spinner, {\n      ref: \"spinner\",\n      role: _ctx.datetimeRole || \"start\",\n      \"arrow-control\": _ctx.arrowControl,\n      \"show-seconds\": _ctx.showSeconds,\n      \"am-pm-mode\": _ctx.amPmMode,\n      \"spinner-date\": _ctx.parsedValue,\n      \"disabled-hours\": _ctx.disabledHours,\n      \"disabled-minutes\": _ctx.disabledMinutes,\n      \"disabled-seconds\": _ctx.disabledSeconds,\n      onChange: _ctx.handleChange,\n      onSetOption: _ctx.onSetOption,\n      onSelectRange: _ctx.setSelectionRange\n    }, null, 8, [\"role\", \"arrow-control\", \"show-seconds\", \"am-pm-mode\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2), createElementVNode(\"div\", {\n      class: normalizeClass(_ctx.ns.be(\"panel\", \"footer\"))\n    }, [createElementVNode(\"button\", {\n      type: \"button\",\n      class: normalizeClass([_ctx.ns.be(\"panel\", \"btn\"), \"cancel\"]),\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleCancel && _ctx.handleCancel(...args))\n    }, toDisplayString(_ctx.t(\"el.datepicker.cancel\")), 3), createElementVNode(\"button\", {\n      type: \"button\",\n      class: normalizeClass([_ctx.ns.be(\"panel\", \"btn\"), \"confirm\"]),\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.handleConfirm())\n    }, toDisplayString(_ctx.t(\"el.datepicker.confirm\")), 3)], 2)], 2)) : createCommentVNode(\"v-if\", true)]),\n    _: 1\n  }, 8, [\"name\"]);\n}\n\nvar TimePickPanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { TimePickPanel as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","components","TimeSpinner","props","visible","actualVisible","type","default","datetimeRole","parsedValue","Object","String","format","emits","setup","ctx","ns","useNamespace","t","lang","useLocale","ref","oldValue","useOldValue","computed","isUndefined","namespace","value","includes","_date","parsedDate","locale","result","getRangeAvailableTime","isSame","handleCancel","handleConfirm","first","millisecond","start","end","selectionRange","step","concat","showSeconds","index","indexOf","next","list","length","timePickerOptions","mapping","event","code","left","EVENT_CODE","right","changeSelectionRange","up","down","date","availableMap","hour","minute","second","forEach","_","method","availableArr","dayjs","getDefaultValue","defaultValue","isValidValue","formatToString","parseUserInput","handleKeydown","emit","e","pickerBase","inject","arrowControl","disabledHours","disabledMinutes","disabledSeconds","getAvailableHours","getAvailableMinutes","getAvailableSeconds","getAvailableArrs","transitionName","onSetOption","handleChange","setSelectionRange","amPmMode","_createBlock","name","_ctx","openBlock","_createElementBlock","key","class","b","_createElementVNode","be","_createVNode","role","onChange","onSelectRange","_normalizeClass","onClick","_cache","_toDisplayString"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-pick.vue"],"sourcesContent":["<template>\n  <transition :name=\"transitionName\">\n    <div v-if=\"actualVisible || visible\" :class=\"ns.b('panel')\">\n      <div :class=\"[ns.be('panel', 'content'), { 'has-seconds': showSeconds }]\">\n        <time-spinner\n          ref=\"spinner\"\n          :role=\"datetimeRole || 'start'\"\n          :arrow-control=\"arrowControl\"\n          :show-seconds=\"showSeconds\"\n          :am-pm-mode=\"amPmMode\"\n          :spinner-date=\"parsedValue\"\n          :disabled-hours=\"disabledHours\"\n          :disabled-minutes=\"disabledMinutes\"\n          :disabled-seconds=\"disabledSeconds\"\n          @change=\"handleChange\"\n          @set-option=\"onSetOption\"\n          @select-range=\"setSelectionRange\"\n        />\n      </div>\n      <div :class=\"ns.be('panel', 'footer')\">\n        <button\n          type=\"button\"\n          :class=\"[ns.be('panel', 'btn'), 'cancel']\"\n          @click=\"handleCancel\"\n        >\n          {{ t('el.datepicker.cancel') }}\n        </button>\n        <button\n          type=\"button\"\n          :class=\"[ns.be('panel', 'btn'), 'confirm']\"\n          @click=\"handleConfirm()\"\n        >\n          {{ t('el.datepicker.confirm') }}\n        </button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, ref } from 'vue'\nimport dayjs from 'dayjs'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { isUndefined } from '@element-plus/utils'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nexport default defineComponent({\n  components: {\n    TimeSpinner,\n  },\n\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      default: undefined,\n    },\n    datetimeRole: {\n      type: String,\n    },\n    parsedValue: {\n      type: [Object, String] as PropType<string | Dayjs>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const ns = useNamespace('time')\n    const { t, lang } = useLocale()\n    // data\n    const selectionRange = ref([0, 2])\n    const oldValue = useOldValue(props)\n    // computed\n    const transitionName = computed(() => {\n      return isUndefined(props.actualVisible)\n        ? `${ns.namespace.value}-zoom-in-top`\n        : ''\n    })\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n    // method\n    const isValidValue = (_date: Dayjs) => {\n      const parsedDate = dayjs(_date).locale(lang.value)\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate.isSame(result)\n    }\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, false)\n    }\n    const handleConfirm = (visible = false, first = false) => {\n      if (first) return\n      ctx.emit('pick', props.parsedValue, visible)\n    }\n    const handleChange = (_date: Dayjs) => {\n      // visible avoids edge cases, when use scrolls during panel closing animation\n      if (!props.visible) {\n        return\n      }\n      const result = getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', result, true)\n    }\n\n    const setSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end)\n      selectionRange.value = [start, end]\n    }\n\n    const changeSelectionRange = (step: number) => {\n      const list = [0, 3].concat(showSeconds.value ? [6] : [])\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      timePickerOptions['start_emitSelectRange'](mapping[next])\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        timePickerOptions['start_scrollDown'](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const getRangeAvailableTime = (date: Dayjs) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      let result = date\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), props.datetimeRole)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              props.datetimeRole\n            )\n          } else {\n            availableArr = method(props.datetimeRole)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            result = result[_](availableArr[0])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs) => {\n      if (!value) return null\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs) => {\n      if (!value) return null\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      return dayjs(defaultValue).locale(lang.value)\n    }\n\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['handleKeydown', handleKeydown])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds)\n\n    return {\n      ns,\n\n      transitionName,\n      arrowControl,\n      onSetOption,\n      t,\n      handleConfirm,\n      handleChange,\n      setSelectionRange,\n      amPmMode,\n      showSeconds,\n      handleCancel,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}