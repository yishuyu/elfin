{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8aa9b5a2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  style: {\n    \"margin-top\": \"10px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_row = _resolveComponent(\"el-row\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, {\n    gutter: 50,\n    justify: \"center\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", {\n        onClick: _cache[0] || (_cache[0] = (...args) => $options.onDeleteErrors && $options.onDeleteErrors(...args)),\n        class: \"task-button\"\n      }, \"清错\")]),\n      _: 1\n    }), _createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", {\n        onClick: _cache[1] || (_cache[1] = $event => $options.controlArm(1, 'enable', true)),\n        class: \"task-button\"\n      }, \" 使能机械臂 \")]),\n      _: 1\n    })]),\n    _: 1\n  }), _createVNode(_component_el_row, {\n    gutter: 50,\n    style: {\n      \"margin-top\": \"50px\"\n    },\n    justify: \"center\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", {\n        onClick: _cache[2] || (_cache[2] = $event => $options.controlArm(1, 'enable', false)),\n        class: \"task-button\"\n      }, \" 去使能机械臂 \")]),\n      _: 1\n    }), _createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", {\n        onClick: _cache[3] || (_cache[3] = $event => $options.controlArm(0, 'powerOn', true)),\n        class: \"task-button\"\n      }, \" 上电 \")]),\n      _: 1\n    })]),\n    _: 1\n  }), _createVNode(_component_el_row, {\n    gutter: 50,\n    style: {\n      \"margin-top\": \"50px\"\n    },\n    justify: \"center\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", {\n        onClick: _cache[4] || (_cache[4] = $event => $options.controlArm(0, 'powerOn', false)),\n        class: \"task-button\"\n      }, \" 断电 \")]),\n      _: 1\n    }), _createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", {\n        onClick: _cache[5] || (_cache[5] = (...args) => $options.onArmBackOrigin && $options.onArmBackOrigin(...args)),\n        class: \"task-button\"\n      }, \"机械臂长按回原点\")]),\n      _: 1\n    })]),\n    _: 1\n  })]);\n}","map":{"version":3,"mappings":";;;;;AAsBOA,OAAwB,EAAxB;AAAA;AAAA;;;;;;;uBAALC,oBA0CM,KA1CN,cA0CM,CAxCJC,aASSC,iBATT,EASS;AATAC,UAAM,EAAE,EASR;AATYC,WAAO,EAAC;AASpB,GATT;sBACE,MAES,CAFTH,aAESI,iBAFT,EAES;AAFAC,UAAI,EAAE;AAEN,KAFT,EAAgB;wBACd,MAAyD,CAAzDC,oBAAyD,KAAzD,EAAyD;AAAnDC,eAAK,yCAAEC,2DAAF,CAA8C;AAA5BC,aAAK,EAAC;AAAsB,OAAzD,EAAiD,IAAjD,CAAyD,EAD3C;;AAAA,KAAhB,CAES,EACTT,aAISI,iBAJT,EAIS;AAJAC,UAAI,EAAE;AAIN,KAJT,EAAgB;wBACd,MAEM,CAFNC,oBAEM,KAFN,EAEM;AAFAC,eAAK,sCAAEC,oBAAU,CAAV,EAAU,QAAV,EAAU,IAAV,CAAF,CAEL;AAFsCC,aAAK,EAAC;AAE5C,OAFN,EAAgE,SAAhE,CAEM,EAHQ;;AAAA,KAAhB,CADS;;GAHX,CAwCI,EA9BJT,aAWSC,iBAXT,EAWS;AAXAC,UAAM,EAAE,EAWR;AAXYJ,SAAwB,EAAxB;AAAA;AAAA,KAWZ;AAXqCK,WAAO,EAAC;AAW7C,GAXT;sBACE,MAIS,CAJTH,aAISI,iBAJT,EAIS;AAJAC,UAAI,EAAE;AAIN,KAJT,EAAgB;wBACd,MAEM,CAFNC,oBAEM,KAFN,EAEM;AAFAC,eAAK,sCAAEC,oBAAU,CAAV,EAAU,QAAV,EAAU,KAAV,CAAF,CAEL;AAFuCC,aAAK,EAAC;AAE7C,OAFN,EAAiE,UAAjE,CAEM,EAHQ;;AAAA,KAAhB,CAIS,EACTT,aAISI,iBAJT,EAIS;AAJAC,UAAI,EAAE;AAIN,KAJT,EAAgB;wBACd,MAEM,CAFNC,oBAEM,KAFN,EAEM;AAFAC,eAAK,sCAAEC,oBAAU,CAAV,EAAU,SAAV,EAAU,IAAV,CAAF,CAEL;AAFuCC,aAAK,EAAC;AAE7C,OAFN,EAAiE,MAAjE,CAEM,EAHQ;;AAAA,KAAhB,CADS;;GALX,CA8BI,EAlBJT,aASSC,iBATT,EASS;AATAC,UAAM,EAAE,EASR;AATYJ,SAAwB,EAAxB;AAAA;AAAA,KASZ;AATqCK,WAAO,EAAC;AAS7C,GATT;sBACE,MAIS,CAJTH,aAISI,iBAJT,EAIS;AAJAC,UAAI,EAAE;AAIN,KAJT,EAAgB;wBACd,MAEM,CAFNC,oBAEM,KAFN,EAEM;AAFAC,eAAK,sCAAEC,oBAAU,CAAV,EAAU,SAAV,EAAU,KAAV,CAAF,CAEL;AAFwCC,aAAK,EAAC;AAE9C,OAFN,EAAkE,MAAlE,CAEM,EAHQ;;AAAA,KAAhB,CAIS,EACTT,aAESI,iBAFT,EAES;AAFAC,UAAI,EAAE;AAEN,KAFT,EAAgB;wBACd,MAAgE,CAAhEC,oBAAgE,KAAhE,EAAgE;AAA1DC,eAAK,yCAAEC,6DAAF,CAAqD;AAAlCC,aAAK,EAAC;AAA4B,OAAhE,EAAkD,UAAlD,CAAgE,EADlD;;AAAA,KAAhB,CADS;;GALX,CAkBI,CA1CN","names":["style","_createElementBlock","_createVNode","_component_el_row","gutter","justify","_component_el_col","span","_createElementVNode","onClick","$options","class"],"sourceRoot":"","sources":["D:\\Program Files\\web\\prj\\sendRobot\\src\\pages\\Dashboard\\components\\RobotOperation.vue"],"sourcesContent":["<template>\n  <!-- <div>\n    导航区域\n    <div v-for=\"i in positionsList\" :key=\"i.id\">\n      <el-button\n        type=\"primary\"\n        style=\"margin-top: 5px\"\n        @click=\"changeRobotPosition({ destPosition: i.id, cmd: 1 })\"\n        >{{ i.type }}</el-button\n      >\n    </div>\n  </div>\n  <div style=\"margin-top: 10px\">\n    <div>机器人当前状态</div>\n    {{ robotInfo.robotId ? robotInfo : initRobotInfo }}\n  </div>\n  <div v-if=\"polling\" style=\"margin-top: 10px\">\n    <el-button>暂停导航</el-button><el-button>结束导航</el-button>\n  </div>\n  <div v-if=\"navResult\" style=\"margin-top: 10px\">\n    <div>导航已结束，当前状态:{{ codeMessage[navResult.errCode] }}</div>\n  </div> -->\n  <div style=\"margin-top: 10px\">\n    <!-- <div>机械臂控制</div> -->\n    <el-row :gutter=\"50\" justify=\"center\">\n      <el-col :span=\"6\">\n        <div @click=\"onDeleteErrors\" class=\"task-button\">清错</div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div @click=\"controlArm(1, 'enable', true)\" class=\"task-button\">\n          使能机械臂\n        </div>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"50\" style=\"margin-top: 50px\" justify=\"center\">\n      <el-col :span=\"6\">\n        <div @click=\"controlArm(1, 'enable', false)\" class=\"task-button\">\n          去使能机械臂\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div @click=\"controlArm(0, 'powerOn', true)\" class=\"task-button\">\n          上电\n        </div>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"50\" style=\"margin-top: 50px\" justify=\"center\">\n      <el-col :span=\"6\">\n        <div @click=\"controlArm(0, 'powerOn', false)\" class=\"task-button\">\n          断电\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div @click=\"onArmBackOrigin\" class=\"task-button\">机械臂长按回原点</div>\n      </el-col>\n    </el-row>\n\n    <!-- <el-button @click=\"controlArm(1, 'enable', true)\">使能机械臂</el-button>\n    <el-button @click=\"controlArm(1, 'enable', false)\">去使能机械臂</el-button>\n    <el-button @click=\"controlArm(0, 'powerOn', true)\">上电</el-button>\n    <el-button @click=\"controlArm(0, 'powerOn', false)\">断电</el-button>\n    <el-button @click=\"controlArm(2, 'stop', true)\"\n      >停止机械臂当前动作</el-button\n    > -->\n  </div>\n</template>\n\n<script>\n/* eslint-disable no-unused-vars */\nimport { ElMessage } from \"element-plus\";\nimport {\n  getRobotInfoApi,\n  robotNavigationApi,\n  getNavigationResultApi,\n  ctrlArmApi,\n  deleteErrors,\n  armBackOrigin,\n} from \"@/service/robot\";\nimport { codeMessage } from \"@/utils/request\";\nexport default {\n  name: \"RobotOperation\",\n  props: {\n    positionsList: Array,\n    drawPoint: Function,\n    calculatePointPosition: Function,\n    initRobotInfo: Object,\n  },\n  data() {\n    return {\n      codeMessage: codeMessage,\n      robotInfo: {},\n      currentNavRequestId: \"\",\n      navResult: null,\n      polling: null,\n      navCmdMap: {\n        1: \"开始\",\n        2: \"暂停\",\n        3: \"继续\",\n        4: \"结束\",\n      },\n      validParam: {\n        0: \"powerOn\",\n        1: \"enable\",\n        2: \"stop\",\n        3: \"clearFaults\",\n      },\n    };\n  },\n  methods: {\n    async onArmBackOrigin() {\n      const res = await armBackOrigin();\n      if (res.code === 0) {\n        ElMessage({\n          message: `操作成功`,\n          type: \"success\",\n        });\n      }\n    },\n    async onDeleteErrors() {\n      const res = await deleteErrors();\n      if (res.code === 0) {\n        ElMessage({\n          message: `操作成功`,\n          type: \"success\",\n        });\n      }\n    },\n    async getRobotInfo() {\n      const { data } = await getRobotInfoApi();\n      this.robotInfo = data;\n      const { x, y } = this.calculatePointPosition(data.x, data.y);\n      // 渲染机器人位置\n      this.drawPoint(x, y, 20);\n    },\n    async changeRobotPosition({ destPosition, cmd }) {\n      this.navResult = null;\n      const res = await robotNavigationApi({ destPosition, cmd });\n      const { data, code } = res;\n      this.currentNavRequestId = data.requestId;\n      if (code === 0) {\n        ElMessage({\n          message: `设置导航点成功，当前目标点：${\n            this.positionsList.find((i) => i.id === destPosition).type\n          }`,\n          type: \"success\",\n        });\n        this.startPolling();\n      }\n    },\n    async getNavResultAndPosition() {\n      // 轮询状态接口 如果接收到数据则说明导航结束了，停止轮询\n      this.getRobotInfo();\n      const res = await getNavigationResultApi();\n      if (res.requestId === this.currentNavRequestId) {\n        // 请求id校验\n        this.navResult = res;\n      }\n    },\n    async controlArm(validParam, action, status) {\n      await ctrlArmApi({ validParam, [action]: status, armIndex: 0 });\n      //TODO 这里应该查询/轮询机器人状态？\n    },\n    startPolling() {\n      this.polling = setInterval(() => {\n        this.getNavResultAndPosition();\n      }, 1000); //1秒查询一次\n    },\n  },\n  mounted() {\n    // 机器人初始信息通过父组件传过来 避免第一次加载地图可能点渲染不上\n    // this.getRobotInfo();\n  },\n  watch: {\n    navResult(newVal, oldVal) {\n      // 轮询状态 如果接收到数据则说明导航结束了，停止轮询\n      if (newVal) {\n        ElMessage({\n          message: `导航已经结束，当前状态：${codeMessage[newVal.errCode]}`,\n          type: \"success\",\n        });\n        clearInterval(this.polling);\n        this.polling = null;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.task-button {\n  height: 100px;\n  border: 1px solid #f0f0f0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n\n.task-button:hover {\n  border: 1px solid #adbbff;\n  color: #adbbff;\n}\n</style>"]},"metadata":{},"sourceType":"module"}