{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1345cbb2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  style: {\n    \"margin-top\": \"10px\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"box\"\n};\nconst _hoisted_3 = {\n  class: \"box\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"task-button\"\n}, \"开启零力示教\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"task-button\"\n}, \"关闭零力示教\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div>\\n    导航区域\\n    <div v-for=\\\"i in positionsList\\\" :key=\\\"i.id\\\">\\n      <el-button\\n        type=\\\"primary\\\"\\n        style=\\\"margin-top: 5px\\\"\\n        @click=\\\"changeRobotPosition({ destPosition: i.id, cmd: 1 })\\\"\\n        >{{ i.type }}</el-button\\n      >\\n    </div>\\n  </div>\\n  <div style=\\\"margin-top: 10px\\\">\\n    <div>机器人当前状态</div>\\n    {{ robotInfo.robotId ? robotInfo : initRobotInfo }}\\n  </div>\\n  <div v-if=\\\"polling\\\" style=\\\"margin-top: 10px\\\">\\n    <el-button>暂停导航</el-button><el-button>结束导航</el-button>\\n  </div>\\n  <div v-if=\\\"navResult\\\" style=\\\"margin-top: 10px\\\">\\n    <div>导航已结束，当前状态:{{ codeMessage[navResult.errCode] }}</div>\\n  </div> \"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" <div>机械臂控制</div> \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.controlArm(0, 'powerOn', true)),\n    class: \"task-button\"\n  }, \" 上电 \"), _createElementVNode(\"div\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.controlArm(0, 'powerOn', false)),\n    class: \"task-button\"\n  }, \" 断电 \"), _createElementVNode(\"div\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.controlArm(1, 'enable', true)),\n    class: \"task-button\"\n  }, \" 使能机械臂 \"), _createElementVNode(\"div\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.controlArm(1, 'enable', false)),\n    class: \"task-button\"\n  }, \" 去使能机械臂 \")]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.onDeleteErrors && $options.onDeleteErrors(...args)),\n    class: \"task-button\"\n  }, \"清错\"), _createElementVNode(\"div\", {\n    onTouchstart: _cache[5] || (_cache[5] = (...args) => $options.onArmBackOrigin && $options.onArmBackOrigin(...args)),\n    onTouchend: _cache[6] || (_cache[6] = (...args) => $options.onArmBackOriginEnd && $options.onArmBackOriginEnd(...args)),\n    class: \"task-button\"\n  }, \"机械臂长按回原点\", 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_4, _hoisted_5]), _createCommentVNode(\" <el-button @click=\\\"controlArm(1, 'enable', true)\\\">使能机械臂</el-button>\\n    <el-button @click=\\\"controlArm(1, 'enable', false)\\\">去使能机械臂</el-button>\\n    <el-button @click=\\\"controlArm(0, 'powerOn', true)\\\">上电</el-button>\\n    <el-button @click=\\\"controlArm(0, 'powerOn', false)\\\">断电</el-button>\\n    <el-button @click=\\\"controlArm(2, 'stop', true)\\\"\\n      >停止机械臂当前动作</el-button\\n    > \")])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;AAsBOA,OAAwB,EAAxB;AAAA;AAAA;;;AAEEC,OAAK,EAAC;;;AAcNA,OAAK,EAAC;;;gEAGTC,oBAAqC,KAArC,EAAqC;AAAhCD,OAAK,EAAC;AAA0B,CAArC,EAAyB,QAAzB,EAA+B;AAAA;AAA/B;;gEACAC,oBAAqC,KAArC,EAAqC;AAAhCD,OAAK,EAAC;AAA0B,CAArC,EAAyB,QAAzB,EAA+B;AAAA;AAA/B;;;6DAzCJE,mrBAqBAD,oBA6BM,KA7BN,cA6BM,CA5BJC,yCA4BI,EA3BJD,oBAaM,KAbN,cAaM,CAZJA,oBAEM,KAFN,EAEM;AAFAE,WAAK,sCAAEC,oBAAU,CAAV,EAAU,SAAV,EAAU,IAAV,CAAF,CAEL;AAFuCJ,SAAK,EAAC;AAE7C,GAFN,EAAiE,MAAjE,CAYI,EATJC,oBAEM,KAFN,EAEM;AAFAE,WAAK,sCAAEC,oBAAU,CAAV,EAAU,SAAV,EAAU,KAAV,CAAF,CAEL;AAFwCJ,SAAK,EAAC;AAE9C,GAFN,EAAkE,MAAlE,CASI,EANJC,oBAEM,KAFN,EAEM;AAFAE,WAAK,sCAAEC,oBAAU,CAAV,EAAU,QAAV,EAAU,IAAV,CAAF,CAEL;AAFsCJ,SAAK,EAAC;AAE5C,GAFN,EAAgE,SAAhE,CAMI,EAHJC,oBAEM,KAFN,EAEM;AAFAE,WAAK,sCAAEC,oBAAU,CAAV,EAAU,QAAV,EAAU,KAAV,CAAF,CAEL;AAFuCJ,SAAK,EAAC;AAE7C,GAFN,EAAiE,UAAjE,CAGI,CAbN,CA2BI,EAbJC,oBAKM,KALN,cAKM,CAJJA,oBAAyD,KAAzD,EAAyD;AAAnDE,WAAK,yCAAEC,2DAAF,CAA8C;AAA5BJ,SAAK,EAAC;AAAsB,GAAzD,EAAiD,IAAjD,CAII,EAHJC,oBAAoG,KAApG,EAAoG;AAA9FI,gBAAU,yCAAED,6DAAF,CAAoF;AAAhEE,cAAQ,yCAAEF,mEAAF,CAAwD;AAAlCJ,SAAK,EAAC;AAA4B,GAApG,EAAsF,UAAtF,EAA8F;AAAA;AAA9F,GAGI,EAFJO,UAEI,EADJC,UACI,CALN,CAaI,EAPJN,yZAOI,CA7BN","names":["style","class","_createElementVNode","_createCommentVNode","onClick","$options","onTouchstart","onTouchend","_hoisted_4","_hoisted_5"],"sourceRoot":"","sources":["D:\\Program Files\\web\\prj\\sendRobot\\src\\pages\\Dashboard\\components\\RobotOperation.vue"],"sourcesContent":["<template>\n  <!-- <div>\n    导航区域\n    <div v-for=\"i in positionsList\" :key=\"i.id\">\n      <el-button\n        type=\"primary\"\n        style=\"margin-top: 5px\"\n        @click=\"changeRobotPosition({ destPosition: i.id, cmd: 1 })\"\n        >{{ i.type }}</el-button\n      >\n    </div>\n  </div>\n  <div style=\"margin-top: 10px\">\n    <div>机器人当前状态</div>\n    {{ robotInfo.robotId ? robotInfo : initRobotInfo }}\n  </div>\n  <div v-if=\"polling\" style=\"margin-top: 10px\">\n    <el-button>暂停导航</el-button><el-button>结束导航</el-button>\n  </div>\n  <div v-if=\"navResult\" style=\"margin-top: 10px\">\n    <div>导航已结束，当前状态:{{ codeMessage[navResult.errCode] }}</div>\n  </div> -->\n  <div style=\"margin-top: 10px\">\n    <!-- <div>机械臂控制</div> -->\n    <div class=\"box\">\n      <div @click=\"controlArm(0, 'powerOn', true)\" class=\"task-button\">\n        上电\n      </div>\n      <div @click=\"controlArm(0, 'powerOn', false)\" class=\"task-button\">\n        断电\n      </div>\n      <div @click=\"controlArm(1, 'enable', true)\" class=\"task-button\">\n        使能机械臂\n      </div>\n      <div @click=\"controlArm(1, 'enable', false)\" class=\"task-button\">\n        去使能机械臂\n      </div>\n    </div>\n    <div class=\"box\">\n      <div @click=\"onDeleteErrors\" class=\"task-button\">清错</div>\n      <div @touchstart=\"onArmBackOrigin\" @touchend=\"onArmBackOriginEnd\" class=\"task-button\">机械臂长按回原点</div>\n      <div class=\"task-button\">开启零力示教</div>\n      <div class=\"task-button\">关闭零力示教</div>\n    </div>\n    <!-- <el-button @click=\"controlArm(1, 'enable', true)\">使能机械臂</el-button>\n    <el-button @click=\"controlArm(1, 'enable', false)\">去使能机械臂</el-button>\n    <el-button @click=\"controlArm(0, 'powerOn', true)\">上电</el-button>\n    <el-button @click=\"controlArm(0, 'powerOn', false)\">断电</el-button>\n    <el-button @click=\"controlArm(2, 'stop', true)\"\n      >停止机械臂当前动作</el-button\n    > -->\n  </div>\n</template>\n\n<script>\n/* eslint-disable no-unused-vars */\nimport { ElMessage } from \"element-plus\";\nimport {\n  getRobotInfoApi,\n  robotNavigationApi,\n  getNavigationResultApi,\n  ctrlArmApi,\n  deleteErrors,\n  armBackOrigin,\n  armEndOrigin,\n} from \"@/service/robot\";\nimport { codeMessage } from \"@/utils/request\";\nexport default {\n  name: \"RobotOperation\",\n  props: {\n    positionsList: Array,\n    drawPoint: Function,\n    calculatePointPosition: Function,\n    initRobotInfo: Object,\n  },\n  data() {\n    return {\n      codeMessage: codeMessage,\n      robotInfo: {},\n      currentNavRequestId: \"\",\n      navResult: null,\n      polling: null,\n      navCmdMap: {\n        1: \"开始\",\n        2: \"暂停\",\n        3: \"继续\",\n        4: \"结束\",\n      },\n      validParam: {\n        0: \"powerOn\",\n        1: \"enable\",\n        2: \"stop\",\n        3: \"clearFaults\",\n      },\n    };\n  },\n  methods: {\n    async onArmBackOriginEnd(){\n      console.log('end')\n      let obj = {\n        cmd:3\n      }\n      const res = await armEndOrigin(obj)   \n    },\n    async onArmBackOrigin() {\n      console.log(111)\n      const res = await armBackOrigin();\n      if (res.code === 0) {\n        ElMessage({\n          message: `操作成功`,\n          type: \"success\",\n        });\n      }\n    },\n    async onDeleteErrors() {\n      const res = await deleteErrors();\n      if (res.code === 0) {\n        ElMessage({\n          message: `操作成功`,\n          type: \"success\",\n        });\n      }\n    },\n    async getRobotInfo() {\n      const { data } = await getRobotInfoApi();\n      this.robotInfo = data;\n      const { x, y } = this.calculatePointPosition(data.x, data.y);\n      // 渲染机器人位置\n      this.drawPoint(x, y, 20);\n    },\n    async changeRobotPosition({ destPosition, cmd }) {\n      this.navResult = null;\n      const res = await robotNavigationApi({ destPosition, cmd });\n      const { data, code } = res;\n      this.currentNavRequestId = data.requestId;\n      if (code === 0) {\n        ElMessage({\n          message: `设置导航点成功，当前目标点：${\n            this.positionsList.find((i) => i.id === destPosition).type\n          }`,\n          type: \"success\",\n        });\n        this.startPolling();\n      }\n    },\n    async getNavResultAndPosition() {\n      // 轮询状态接口 如果接收到数据则说明导航结束了，停止轮询\n      this.getRobotInfo();\n      const res = await getNavigationResultApi();\n      if (res.requestId === this.currentNavRequestId) {\n        // 请求id校验\n        this.navResult = res;\n      }\n    },\n    async controlArm(validParam, action, status) {\n      await ctrlArmApi({ validParam, [action]: status, armIndex: 0 });\n      //TODO 这里应该查询/轮询机器人状态？\n    },\n    startPolling() {\n      this.polling = setInterval(() => {\n        this.getNavResultAndPosition();\n      }, 1000); //1秒查询一次\n    },\n  },\n  mounted() {\n    // 机器人初始信息通过父组件传过来 避免第一次加载地图可能点渲染不上\n    // this.getRobotInfo();\n  },\n  watch: {\n    navResult(newVal, oldVal) {\n      // 轮询状态 如果接收到数据则说明导航结束了，停止轮询\n      if (newVal) {\n        ElMessage({\n          message: `导航已经结束，当前状态：${codeMessage[newVal.errCode]}`,\n          type: \"success\",\n        });\n        clearInterval(this.polling);\n        this.polling = null;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang='scss'>\n.box {\n  width: 100%;\n  display: flex;\n  margin: 0 auto;\n  .task-button {\n    width: 261px;\n    height: 147px;\n    background: linear-gradient(180deg, #f2f8ff 0%, #ffffff 112.66%);\n    box-shadow: 0px 0px 5px rgba(184, 190, 217, 0.5);\n    border-radius: 20.0355px;\n    border: 2px solid #9ABDF8;\n    margin-left:40px;\n    margin-top: 50px;\n    text-align: center;\n    line-height: 147px;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}