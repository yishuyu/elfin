{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/images/big.png';\nimport _imports_1 from '@/assets/images/little.png';\nimport _imports_2 from '@/assets/images/reset.png';\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-9f8278bc\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"map-header\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"地图列表\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"切换地图\");\n\nconst _hoisted_4 = {\n  class: \"map-footer\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"目标站点\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"导航\");\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"重定位\");\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"确认切换地图吗？\", -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"确认\");\n\nconst _hoisted_12 = [\"width\", \"height\"];\nconst _hoisted_13 = {\n  class: \"btn-box\"\n};\n\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_15 = [_hoisted_14];\n\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_17 = [_hoisted_16];\n\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_19 = [_hoisted_18];\nconst _hoisted_20 = {\n  class: \"state-box\"\n};\n\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"li\", null, \"前方阻挡：\", -1\n/* HOISTED */\n));\n\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"定位是否准确？\", -1\n/* HOISTED */\n));\n\nconst _hoisted_23 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_24 = /*#__PURE__*/_createTextVNode(\"否\");\n\nconst _hoisted_25 = /*#__PURE__*/_createTextVNode(\"是\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_hoisted_2, _createVNode(_component_el_select, {\n    modelValue: $data.currentMap,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.currentMap = $event),\n    class: \"m-2\",\n    placeholder: \"Select\",\n    size: \"large\",\n    style: {\n      \"margin-left\": \"10px\"\n    }\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.mapList, (item, index) => {\n      return _openBlock(), _createBlock(_component_el_option, {\n        key: index,\n        label: item,\n        value: item\n      }, null, 8\n      /* PROPS */\n      , [\"label\", \"value\"]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.changeMap\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"])]), _createElementVNode(\"div\", null, \" 当前地图：\" + _toDisplayString(this.robotInfo.map ? this.robotInfo.map : \"暂无\") + \"    \", 1\n  /* TEXT */\n  ), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createVNode(_component_el_select, {\n    modelValue: $data.selectedPosition,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedPosition = $event),\n    class: \"m-2\",\n    placeholder: \"Select\",\n    size: \"large\",\n    style: {\n      \"margin-left\": \"10px\"\n    }\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.positionsList, item => {\n      return _openBlock(), _createBlock(_component_el_option, {\n        key: item.id,\n        label: item.id,\n        value: item.id\n      }, null, 8\n      /* PROPS */\n      , [\"label\", \"value\"]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.onNavClick\n  }, {\n    default: _withCtx(() => [_hoisted_6]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.rediretorPosition\n  }, {\n    default: _withCtx(() => [_hoisted_7]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"onClick\"])]), _createVNode(_component_el_dialog, {\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.dialogVisible = $event),\n    title: \"Tips\",\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_9, [_createVNode(_component_el_button, {\n      onClick: _cache[2] || (_cache[2] = $event => $data.dialogVisible = false)\n    }, {\n      default: _withCtx(() => [_hoisted_10]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.comfireModel\n    }, {\n      default: _withCtx(() => [_hoisted_11]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"])])]),\n    default: _withCtx(() => [_hoisted_8]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createCommentVNode(\" <div\\n            v-for=\\\"(i, index) in mapList\\\"\\n            :key=\\\"i\\\"\\n            @click=\\\"onMapSWitchClick(i)\\\"\\n            :class=\\\"currentMap === i ? 'map-radio select' : 'map-radio'\\\"\\n            :style=\\\"{\\n              marginBottom: index === mapList.length - 1 ? 0 : '5px',\\n            }\\\"\\n          >\\n            {{ i }}\\n          </div> \")])]), _createElementVNode(\"div\", {\n    className: \"map-container\",\n    id: \"map-container\",\n    onTouchstart: _cache[9] || (_cache[9] = (...args) => $options.mapstart && $options.mapstart(...args)),\n    onTouchmove: _cache[10] || (_cache[10] = (...args) => $options.mapmove && $options.mapmove(...args)),\n    onTouchend: _cache[11] || (_cache[11] = (...args) => $options.mapend && $options.mapend(...args))\n  }, [_createCommentVNode(\"  :width=\\\"canvasWidth\\\"\\n          :height=\\\"canvasHeight\\\" \"), _createElementVNode(\"canvas\", {\n    id: \"map\",\n    width: $data.canvasWidth,\n    height: $data.canvasHeight,\n    style: {\n      \"border\": \"1px solid #ccc\"\n    }\n  }, null, 8\n  /* PROPS */\n  , _hoisted_12), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.bigCanvas && $options.bigCanvas(...args))\n  }, _hoisted_15), _createElementVNode(\"div\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.littleCanvas && $options.littleCanvas(...args))\n  }, _hoisted_17), _createElementVNode(\"div\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.resetCanvas && $options.resetCanvas(...args))\n  }, _hoisted_19)]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"机械臂状态：\" + _toDisplayString($data.armState), 1\n  /* TEXT */\n  ), _createElementVNode(\"li\", null, \"AGV状态：\" + _toDisplayString($data.agvState), 1\n  /* TEXT */\n  ), _createElementVNode(\"li\", null, \"机械臂处于原点：\" + _toDisplayString($data.robotInfo.armInHomePose ? \"是\" : \"否\"), 1\n  /* TEXT */\n  ), _createElementVNode(\"li\", null, \"定位是否准确：\" + _toDisplayString($data.robotInfo.locationCorrect ? \"是\" : \"否\"), 1\n  /* TEXT */\n  ), _createElementVNode(\"li\", null, \"软急停开启：\" + _toDisplayString($data.robotInfo.softEmergency ? \"是\" : \"否\"), 1\n  /* TEXT */\n  ), _createElementVNode(\"li\", null, \"硬件急停按钮按下：\" + _toDisplayString($data.robotInfo.estop ? \"是\" : \"否\"), 1\n  /* TEXT */\n  ), _hoisted_21, _createElementVNode(\"li\", null, \"当前电量：\" + _toDisplayString(Number($data.robotInfo.power) * 100) + \"%\", 1\n  /* TEXT */\n  )]), _createVNode(_component_el_dialog, {\n    modelValue: $data.dialogPositionVisible,\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.dialogPositionVisible = $event),\n    title: \"Tips\",\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_23, [_createVNode(_component_el_button, {\n      onClick: _cache[7] || (_cache[7] = $event => $data.dialogPositionVisible = false)\n    }, {\n      default: _withCtx(() => [_hoisted_24]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.comfirePositionModel\n    }, {\n      default: _withCtx(() => [_hoisted_25]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"])])]),\n    default: _withCtx(() => [_hoisted_22]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"])])], 32\n  /* HYDRATE_EVENTS */\n  )]), _createCommentVNode(\" <div className=\\\"right-area\\\">\\n        <RobotOperation\\n          :positionsList=\\\"positionsList\\\"\\n          :drawPoint=\\\"drawPoint\\\"\\n          :calculatePointPosition=\\\"calculatePointPosition\\\"\\n          :initRobotInfo=\\\"robotInfo\\\"\\n        />\\n      </div> \")]);\n}","map":{"version":3,"mappings":"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","names":["_imports_0","_imports_1","_imports_2","class","_createElementVNode","src","_hoisted_14","_hoisted_16","_hoisted_18","_createElementBlock","_hoisted_2","_createVNode","_component_el_select","$data","$event","placeholder","size","style","_Fragment","_renderList","item","index","_createBlock","_component_el_option","key","label","value","_component_el_button","type","onClick","$options","_toDisplayString","robotInfo","map","_hoisted_5","id","_component_el_dialog","title","width","footer","_hoisted_8","_createCommentVNode","className","onTouchstart","onTouchmove","onTouchend","height","armInHomePose","locationCorrect","softEmergency","estop","_hoisted_21","Number","power","_hoisted_22"],"sourceRoot":"","sources":["D:\\Program Files\\web\\prj\\sendRobot\\src\\pages\\Dashboard\\components\\MapDashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <div>\n        <div class=\"map-header\">\n          <div>\n            <span>地图列表</span>\n            <el-select\n              v-model=\"currentMap\"\n              class=\"m-2\"\n              placeholder=\"Select\"\n              size=\"large\"\n              style=\"margin-left: 10px\"\n            >\n              <el-option\n                v-for=\"(item, index) in mapList\"\n                :key=\"index\"\n                :label=\"item\"\n                :value=\"item\"\n              />\n            </el-select>\n            <el-button type=\"primary\" @click=\"changeMap\">切换地图</el-button>\n          </div>\n          <div>\n            当前地图：{{\n              this.robotInfo.map ? this.robotInfo.map : \"暂无\"\n            }}&nbsp;&nbsp;&nbsp;\n          </div>\n          <div class=\"map-footer\">\n            <span>目标站点</span>\n            <el-select\n              v-model=\"selectedPosition\"\n              class=\"m-2\"\n              placeholder=\"Select\"\n              size=\"large\"\n              style=\"margin-left: 10px\"\n            >\n              <el-option\n                v-for=\"item in positionsList\"\n                :key=\"item.id\"\n                :label=\"item.id\"\n                :value=\"item.id\"\n              />\n            </el-select>\n            <el-button type=\"primary\" @click=\"onNavClick\">导航</el-button>\n            <el-button type=\"primary\" @click=\"rediretorPosition\"\n              >重定位</el-button\n            >\n          </div>\n          <el-dialog v-model=\"dialogVisible\" title=\"Tips\" width=\"30%\">\n            <span>确认切换地图吗？</span>\n            <template #footer>\n              <span class=\"dialog-footer\">\n                <el-button @click=\"dialogVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click=\"comfireModel\">确认</el-button>\n              </span>\n            </template>\n          </el-dialog>\n          <!-- <div\n            v-for=\"(i, index) in mapList\"\n            :key=\"i\"\n            @click=\"onMapSWitchClick(i)\"\n            :class=\"currentMap === i ? 'map-radio select' : 'map-radio'\"\n            :style=\"{\n              marginBottom: index === mapList.length - 1 ? 0 : '5px',\n            }\"\n          >\n            {{ i }}\n          </div> -->\n        </div>\n      </div>\n      <div\n        className=\"map-container\"\n        id=\"map-container\"\n        @touchstart=\"mapstart\"\n        @touchmove=\"mapmove\"\n        @touchend=\"mapend\"\n      >\n        <!--  :width=\"canvasWidth\"\n          :height=\"canvasHeight\" -->\n        <canvas\n          id=\"map\"\n          :width=\"canvasWidth\"\n          :height=\"canvasHeight\"\n          style=\"border: 1px solid #ccc\"\n        ></canvas>\n        <div class=\"btn-box\">\n          <div @click=\"bigCanvas\"><img src=\"@/assets/images/big.png\" /></div>\n          <div @click=\"littleCanvas\">\n            <img src=\"@/assets/images/little.png\" />\n          </div>\n          <div @click=\"resetCanvas\">\n            <img src=\"@/assets/images/reset.png\" />\n          </div>\n        </div>\n        <div class=\"state-box\">\n          <ul>\n            <li>机械臂状态：{{ armState }}</li>\n            <li>AGV状态：{{ agvState }}</li>\n            <li>机械臂处于原点：{{ robotInfo.armInHomePose ? \"是\" : \"否\" }}</li>\n            <li>定位是否准确：{{ robotInfo.locationCorrect ? \"是\" : \"否\" }}</li>\n            <li>软急停开启：{{ robotInfo.softEmergency ? \"是\" : \"否\" }}</li>\n            <li>硬件急停按钮按下：{{ robotInfo.estop ? \"是\" : \"否\" }}</li>\n            <li>前方阻挡：</li>\n            <li>当前电量：{{ Number(robotInfo.power) * 100 }}%</li>\n          </ul>\n          <el-dialog v-model=\"dialogPositionVisible\" title=\"Tips\" width=\"30%\">\n            <span>定位是否准确？</span>\n            <template #footer>\n              <span class=\"dialog-footer\">\n                <el-button @click=\"dialogPositionVisible = false\">否</el-button>\n                <el-button type=\"primary\" @click=\"comfirePositionModel\"\n                  >是</el-button\n                >\n              </span>\n            </template>\n          </el-dialog>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div className=\"right-area\">\n        <RobotOperation\n          :positionsList=\"positionsList\"\n          :drawPoint=\"drawPoint\"\n          :calculatePointPosition=\"calculatePointPosition\"\n          :initRobotInfo=\"robotInfo\"\n        />\n      </div> -->\n  </div>\n</template>\n\n<script>\n/* eslint-disable no-unused-vars */\nimport { ElMessage } from \"element-plus\";\nimport { toRaw } from \"@vue/reactivity\";\nimport RobotOperation from \"./RobotOperation.vue\";\nimport { armStateEnum } from \"./enum\";\nimport { agvStateEnum } from \"./enum\";\nimport {\n  getMapList,\n  switchMap,\n  getMapInfo,\n  getPositions,\n  robotlocationConfirm,\n  // registerCallbackApi,\n} from \"@/service/map\";\nimport { getRobotInfoApi, robotNavigationApi } from \"@/service/robot\";\nexport default {\n  name: \"MapDashboard\",\n  // eslint-disable-next-line vue/no-unused-components\n  components: { RobotOperation },\n  data() {\n    return {\n      timer: null,\n      pos: {},\n      dialogPositionVisible: false,\n      dialogVisible: false,\n      selectedPosition: \"\",\n      defaultMap: \"\",\n      logo: require(\"@/assets/logo.png\"),\n      robotLogo: require(\"@/assets/images/robot.png\"),\n      canvasWidth: 1000, //1200\n      canvasHeight: 500, //600\n      imgScale: 1, // 图片启示的缩放大小\n      count: 0, // 用来记录机器人的位置是否连续5次一样，5次一样的话停止轮询\n      mapList: [],\n      currentMap: \"\",\n      mapLoading: false,\n      mapInfo: {},\n      positionsList: [],\n      robotInfo: {},\n      positionType: {\n        NAV_POS_TYPE: \"导航点位\",\n        PARK_POS_TYPE: \"停车点位\",\n        CHARGE_POS_TYPE: \"充电点位\",\n        ACTION_POS_TYPE: \"工作点位\",\n      },\n      canvasCtx: \"\",\n      agvState: \"\",\n      armState: \"\",\n    };\n  },\n  methods: {\n    mapstart(event) {\n      console.log(\"touchstart\", event);\n      this.pos = { x: event.clientX, y: event.clientY };\n    },\n    mapmove(evt) {\n      console.log(\"touchmove\", evt);\n      var x = (evt.clientX - this.pos.x) * 2;\n      var y = (evt.clientY - this.pos.y) * 2;\n      this.clearCanvas();\n      this.getMapInfo(this.currentMap); //重新绘制图片\n    },\n    mapend() {\n      console.log(\"touchend\");\n    },\n    initCanvasEvent() {\n      var canvas = this.map;\n      canvas.touchstart = function (event) {\n        console.log(\"event\", event);\n        console.log(\"touchstart\");\n        var pos = { x: event.clientX, y: event.clientY }; //坐标转换，将窗口坐标转换成canvas的坐标\n        canvas.touchmove = function (evt) {\n          //移动\n          console.log(\"touchmove\");\n          canvas.style.cursor = \"move\";\n\n          var x = (evt.clientX - pos.x) * 2;\n          var y = (evt.clientY - pos.y) * 2;\n          this.clearCanvas();\n          this.getMapInfo(this.currentMap); //重新绘制图片\n        };\n        canvas.touchend = function () {\n          console.log(\"touchend\");\n          canvas.touchmove = null;\n          canvas.touchend = null;\n          canvas.style.cursor = \"default\";\n        };\n      };\n    },\n    comfirePositionModel() {\n      robotlocationConfirm().then((res) => {\n        if (res.code == 0) {\n          this.dialogPositionVisible = false;\n        }\n      });\n    },\n    //todo 重定向\n    rediretorPosition() {},\n    bigCanvas() {\n      this.imgScale *= 1.1;\n      this.clearCanvas();\n      this.getMapInfo(this.currentMap);\n    },\n    littleCanvas() {\n      this.imgScale *= 0.9;\n      this.clearCanvas();\n      this.getMapInfo(this.currentMap);\n    },\n    resetCanvas() {\n      this.imgScale = 1;\n      this.clearCanvas();\n      this.getMapInfo(this.currentMap);\n    },\n    changeMap() {\n      this.dialogVisible = true;\n    },\n    comfireModel() {\n      //确认切换地图\n      this.getMapInfo(this.currentMap);\n    },\n    startPolling() {\n      this.polling = setInterval(() => {\n        this.getMapInfo(this.currentMap);\n      }, 3000); // 3秒查询一次\n    },\n    async onNavClick() {\n      if (this.selectedPosition) {\n        const res = await robotNavigationApi({\n          destPosition: this.selectedPosition,\n          cmd: 0,\n        });\n        const { data, code } = res;\n        // this.currentNavRequestId = data.requestId;\n        if (code === 0) {\n          ElMessage({\n            message: `导航开始，当前目标点：${\n              this.positionsList.find((i) => i.id === this.selectedPosition)\n                .type\n            }`,\n            type: \"success\",\n          });\n          this.startPolling();\n        }\n      } else {\n        ElMessage({\n          message: `请先选择一个导航点`,\n          type: \"warning\",\n        });\n      }\n    },\n    async getCurrentRobotInfo() {\n      const { data } = await getRobotInfoApi();\n      this.robotInfo = data;\n      this.armState = armStateEnum[data.armState];\n      this.agvState = agvStateEnum[data.agvState];\n      if (!data.locationCorrect) {\n        this.dialogPositionVisible = true;\n      }\n      // if (data.map == this.currentMap) {\n      const { x, y } = this.calculatePointPosition(data.x, data.y);\n      // 渲染机器人位置\n      // console.log(\"渲染\", x, y);\n      // console.log(\"this.robotInfo333\", this.robotInfo.robotId);\n      this.drawPoint(this.robotInfo.robotId, this.robotLogo, x, y, 40);\n      // }\n    },\n    async getMapList() {\n      const { data } = await getMapList();\n      console.log(\"getMapList\", data);\n      this.mapList = data.mapList;\n      this.currentMap = data.currentMap;\n      return data.mapList;\n    },\n    async getMapInfo(mapName) {\n      const { data } = await getMapInfo({\n        mapName,\n        containPixelData: true,\n      });\n      console.log(\"MapInfo\", data);\n      this.mapInfo = data;\n      // 获取到地图数据后渲染地图和相关位置点\n      if (this.mapList.length > 0) {\n        // let realWidth = data.width/data.resolution\n        // let realHeight = data.height/data.resolution\n        // let rate = realHeight/realWidth\n        this.canvasWidth = data.width / data.resolution;\n        this.canvasHeight = data.height / data.resolution;\n        this.dialogVisible = false;\n        this.drawMap(data.mapUrl, () => {\n          this.getMapPositions();\n        });\n      }\n    },\n    async getMapPositions() {\n      const { data } = await getPositions();\n      console.log(\"========getMapPositions\", data);\n      this.positionsList = data.posArray;\n      this.getCurrentRobotInfo();\n      data.posArray.forEach((item) => {\n        const { x, y } = this.calculatePointPosition(item.x, item.y);\n        // 渲染地图上的点\n        this.drawPoint(item.id, this.logo, x, y, 20);\n      });\n    },\n    getCanvasCtx() {\n      const map = document.getElementById(\"map\");\n      const ctx = map.getContext(\"2d\");\n      this.canvasCtx = ctx;\n    },\n    clearCanvas() {\n      // TODO 目前是清空整个canvas重绘 后续可以针对某个点清空重绘？\n      this.canvasCtx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n    },\n    drawMap(mapUrl, onImageLoadCallback) {\n      const img = new Image();\n      img.src = mapUrl;\n      //  加载图片\n      img.onload = () => {\n        if (img.complete) {\n          this.canvasCtx.drawImage(\n            img,\n            0,\n            0,\n            this.canvasWidth * this.imgScale,\n            this.canvasHeight * this.imgScale\n          );\n          if (onImageLoadCallback) {\n            onImageLoadCallback();\n          }\n        }\n      };\n    },\n    async onMapSWitchClick(map) {\n      const { code } = await switchMap({ mapName: map });\n      if (code === 0) {\n        this.currentMap = map;\n      }\n    },\n    calculatePointPosition(x, y) {\n      // 给的是地图左下角的点，canvas原点在左上角\n      console.log(\"机器人\", x, y);\n      let origin = {\n        x: this.mapInfo.leftBottomX,\n        y: this.mapInfo.leftBottomY,\n      };\n      // 缩放倍数\n      let zoomScale = {\n        x: this.canvasWidth / this.mapInfo.width,\n        y: this.canvasHeight / this.mapInfo.height,\n      };\n      return {\n        x: ((x - origin.x) / this.mapInfo.resolution) * this.imgScale,\n        y: ((y - origin.y) / this.mapInfo.resolution) * this.imgScale,\n      };\n    },\n    drawPoint(text, logoUrl, x, y, dottedSize) {\n      const img = new Image();\n      img.src = logoUrl;\n      //  加载图片\n      img.onload = () => {\n        if (img.complete) {\n          this.canvasCtx.drawImage(img, x, y, dottedSize, dottedSize);\n          //todo 机器人旋转\n          // var degree = step * 90 * Math.PI / 180;\n          // ctx.rotate(degree);\n          // ctx.rotate(45 * Math.PI / 180);\n          this.canvasCtx.font = \"12px bold 黑体\";\n          this.canvasCtx.fillText(text, x + dottedSize, y + dottedSize);\n          // if (onImageLoadCallback) {\n          //   onImageLoadCallback();\n          // }\n        }\n      };\n    },\n  },\n  mounted() {\n    this.getMapList().then((res) => {\n      console.log(\"res\", res);\n      this.getMapInfo(res[res.length - 1]);\n      this.initCanvasEvent();\n    });\n    clearInterval(this.timer)\n    this.timer = null\n    this.timer = setInterval(() => {\n      this.getCurrentRobotInfo();\n    }, 1000);\n    // registerCallbackApi({\n    //   robotStatus: \"/robotStatus\",\n    //   resultNotify: \"/resultNotify\",\n    // });\n    this.getCanvasCtx();\n    this.drawMap(this.defaultMap);\n  },\n  beforeUnmount() {\n    clearInterval(this.timer);\n    this.timer = null;\n  },\n\n  watch: {\n    // currentMap(newVal) {\n    //   this.getMapInfo(newVal);\n    // },\n    robotInfo(newVal, oldVal) {\n      this.robotInfo = newVal;\n      // 如果位置五次都一样，停止轮询\n      if (newVal.x === oldVal.x && newVal.y === oldVal.y) {\n        this.count += 1;\n        if (this.count > 5) {\n          clearInterval(this.polling);\n          this.polling = null;\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.map-container {\n  width: \"100%\";\n  height: 500px;\n}\n.dashboard-container {\n  display: flex;\n  /* justify-content: space-between; */\n}\n.map-header {\n  position: fixed;\n  top: 20px;\n  width: 1264px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  /* justify-content: space-between; */\n  margin-bottom: 10px;\n  background: #fff;\n}\n.map-container {\n  margin-top: 80px;\n}\n.map-radio {\n  border: 1px solid #f0f0f0;\n  padding: 5px 14px;\n  cursor: pointer;\n}\n.map-radio:hover {\n  border: 1px solid #adbbff;\n  color: #adbbff;\n}\n.map-radio.select {\n  border: 1px solid #6882ff;\n  color: #6882ff;\n}\n.state-box {\n  position: absolute;\n  top: 115px;\n  right: 70px;\n  width: 228px;\n  height: 500px;\n  background: rgba(242, 245, 247, 0.5);\n  box-shadow: -2px 0px 4px rgba(0, 0, 0, 0.12);\n  border-radius: 6px 0px 0px 6px;\n}\n.state-box ul {\n  list-style: none;\n  line-height: 50px;\n}\n.btn-box {\n  position: absolute;\n  top: 120px;\n  left: 1100px;\n  div {\n    margin-top: 10px;\n  }\n}\n.el-button.el-button--primary {\n  margin-left: 20px;\n  margin-right: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}